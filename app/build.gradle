apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "io.lunarlogic.aircasting"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.16"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Read the API key from ./secure.properties into R.string.maps_api_key
        def secureProps = new Properties()
        if (file("../secure.properties").exists()) {
            file("../secure.properties")?.withInputStream { secureProps.load(it) }
        }
        resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
        buildConfigField "String", "PLACES_API_KEY", (secureProps.getProperty("PLACES_API_KEY") ?: "\"\"")
    }
    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled:"false"]
        }

        release {
            manifestPlaceholders = [crashlyticsCollectionEnabled:"true"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    implementation "com.google.guava:guava:29.0-android"
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.libraries.maps:maps:3.1.0-beta'

    // for google places api
    implementation(name:'places-maps-sdk-3.1.0-beta', ext:'aar')
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.auto.value:auto-value-annotations:1.6.2'

    def daggerVersion = 2.27
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-support:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-support:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation 'com.google.firebase:firebase-analytics:17.4.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.1'

    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    implementation "androidx.room:room-runtime:2.2.5"
    kapt "android.arch.persistence.room:compiler:2.2.5"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6'

    implementation 'commons-codec:commons-codec:1.14'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'

    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:2.8.1"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:3.8.0"

    def mockitoVersion = '2.6.3'
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
}
