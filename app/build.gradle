plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
}

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "pl.llp.aircasting"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 184
        versionName "2.0.41"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "es", "fr"

        // Read the API key from ./secure.properties into R.string.maps_api_key
        def secureProps = new Properties()
        if (file("../secure.properties").exists()) {
            file("../secure.properties")?.withInputStream { secureProps.load(it) }
        }
        resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
        buildConfigField "String", "PLACES_API_KEY", (secureProps.getProperty("PLACES_API_KEY") ?: "\"\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }

        release {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        animationsDisabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    def androidX_version = "1.4.1"
    implementation "androidx.appcompat:appcompat:$androidX_version"
    implementation "androidx.fragment:fragment-ktx:$androidX_version"
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    // for complex recycler views
    implementation "com.xwray:groupie:2.8.1"
    implementation "com.xwray:groupie-kotlin-android-extensions:2.8.1"

    implementation 'com.google.android.material:material:1.5.0'

    implementation "com.google.guava:guava:29.0-android"
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Process phoenix - restarting app library
    implementation 'com.jakewharton:process-phoenix:2.0.0'

    def daggerVersion = "2.41"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // for http requests
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.opencsv:opencsv:4.6'

    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    // for Google Places API
    implementation('com.google.android.libraries.places:places:2.5.0')
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.auto.value:auto-value-annotations:1.6.3'

    // for Firebase Crashlytics and Test Lab
    implementation platform('com.google.firebase:firebase-bom:28.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'commons-codec:commons-codec:1.14'
    implementation 'no.nordicsemi.android:ble:2.2.4'

    // charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // for testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'

    // for mocking in tests
    def mockitoVersion = '2.6.3'
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
}

